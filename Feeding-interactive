<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Catfish Feeding Timeline Calculator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #1e3c72, #2a5298);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: white;
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            margin-bottom: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            color: #1e3c72;
            margin-bottom: 10px;
            font-size: 2.2em;
        }
        
        .project-info {
            background: rgba(255,255,255,0.95);
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }
        
        .info-card {
            text-align: center;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 8px;
            border: 2px solid #e9ecef;
        }
        
        .info-card h3 {
            color: #1e3c72;
            margin-bottom: 5px;
            font-size: 0.9em;
        }
        
        .info-card p {
            font-weight: bold;
            color: #495057;
        }
        
        .timeline-nav {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 25px;
            justify-content: center;
        }
        
        .month-btn {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        }
        
        .month-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        }
        
        .month-btn.active {
            background: linear-gradient(135deg, #FF6B6B, #ee5a52);
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);
        }
        
        .week-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .week-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            cursor: pointer;
            transition: all 0.3s ease;
            border-left: 5px solid #4CAF50;
        }
        
        .week-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }
        
        .week-card.selected {
            border-left-color: #FF6B6B;
            background: linear-gradient(135deg, #fff, #f8f9ff);
        }
        
        .week-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .week-title {
            font-size: 1.3em;
            font-weight: bold;
            color: #1e3c72;
        }
        
        .fish-size {
            background: #e3f2fd;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.9em;
            color: #1565c0;
            font-weight: bold;
        }
        
        .feeding-details {
            display: grid;
            gap: 10px;
        }
        
        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .detail-label {
            font-weight: 600;
            color: #495057;
        }
        
        .detail-value {
            color: #1e3c72;
            font-weight: bold;
        }
        
        .pellet-size {
            background: linear-gradient(135deg, #FF9800, #f57c00);
            color: white;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.8em;
        }
        
        .daily-breakdown {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-top: 25px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            display: none;
        }
        
        .daily-breakdown.show {
            display: block;
            animation: slideIn 0.3s ease;
        }
        
        @keyframes slideIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .daily-header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e9ecef;
        }
        
        .daily-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }
        
        .daily-card {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #e9ecef;
        }
        
        .day-title {
            font-weight: bold;
            color: #1e3c72;
            margin-bottom: 10px;
            text-align: center;
        }
        
        .feeding-schedule {
            list-style: none;
        }
        
        .feeding-schedule li {
            padding: 5px 0;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
        }
        
        .feeding-schedule li:last-child {
            border-bottom: none;
        }
        
        .time {
            color: #6c757d;
            font-weight: 500;
        }
        
        .amount {
            color: #1e3c72;
            font-weight: bold;
        }
        
        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 25px;
        }
        
        .summary-card {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
        }
        
        .summary-card h3 {
            margin-bottom: 10px;
            font-size: 0.9em;
            opacity: 0.9;
        }
        
        .summary-card p {
            font-size: 1.5em;
            font-weight: bold;
        }
        
        .notes {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            color: #856404;
            padding: 15px;
            border-radius: 10px;
            margin-top: 15px;
        }
        
        .notes h4 {
            margin-bottom: 8px;
            color: #856404;
        }
        
        @media (max-width: 768px) {
            .container { padding: 10px; }
            .week-grid { grid-template-columns: 1fr; }
            .daily-grid { grid-template-columns: 1fr; }
            .project-info { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üêü Catfish Feeding Timeline Calculator</h1>
            <p>Interactive feeding schedule for optimal growth and harvest planning</p>
        </div>
        
        <div class="project-info">
            <div class="info-card">
                <h3>Initial Stock</h3>
                <p>5,000 juveniles (9.8kg total)</p>
            </div>
            <div class="info-card">
                <h3>Target Harvest</h3>
                <p>4,000 fish at 1kg each</p>
            </div>
            <div class="info-card">
                <h3>Timeline</h3>
                <p>6-7 months (30 weeks)</p>
            </div>
            <div class="info-card">
                <h3>Feeding Hours</h3>
                <p>9:00 AM - 4:30 PM</p>
            </div>
        </div>
        
        <div class="timeline-nav">
            <button class="month-btn active" data-month="1">Month 1</button>
            <button class="month-btn" data-month="2">Month 2</button>
            <button class="month-btn" data-month="3">Month 3</button>
            <button class="month-btn" data-month="4">Month 4</button>
            <button class="month-btn" data-month="5">Month 5</button>
            <button class="month-btn" data-month="6">Month 6</button>
            <button class="month-btn" data-month="7">Month 7</button>
        </div>
        
        <div class="week-grid" id="weekGrid">
            <!-- Week cards will be populated by JavaScript -->
        </div>
        
        <div class="daily-breakdown" id="dailyBreakdown">
            <div class="daily-header">
                <h2 id="selectedWeekTitle">Select a week to see daily feeding schedule</h2>
            </div>
            <div class="daily-grid" id="dailyGrid">
                <!-- Daily cards will be populated by JavaScript -->
            </div>
        </div>
        
        <div class="summary-cards">
            <div class="summary-card">
                <h3>Total Feed (30 weeks)</h3>
                <p id="totalFeed">5,200kg</p>
            </div>
            <div class="summary-card">
                <h3>Expected FCR</h3>
                <p>1.3 - 1.5</p>
            </div>
            <div class="summary-card">
                <h3>Harvest Weight</h3>
                <p>4,000kg</p>
            </div>
            <div class="summary-card">
                <h3>Survival Rate</h3>
                <p>80%</p>
            </div>
        </div>
    </div>

    <script>
        // Feeding data with realistic calculations based on biomass
        const feedingData = {
            1: [ // Month 1
                {
                    week: 1,
                    fishCount: 5000,
                    avgWeight: 3,
                    pelletSize: "1.2mm",
                    dailyFeed: 0.9,
                    feedingTimes: 5,
                    schedule: [
                        { time: "9:30 AM", amount: "180g" },
                        { time: "11:00 AM", amount: "180g" },
                        { time: "1:00 PM", amount: "180g" },
                        { time: "3:00 PM", amount: "180g" },
                        { time: "4:15 PM", amount: "180g" }
                    ],
                    notes: "Start with small frequent meals. Monitor mortality closely. High protein feed (40%+)"
                },
                {
                    week: 2,
                    fishCount: 4950,
                    avgWeight: 5,
                    pelletSize: "1.2mm",
                    dailyFeed: 1.2,
                    feedingTimes: 4,
                    schedule: [
                        { time: "9:30 AM", amount: "300g" },
                        { time: "12:00 PM", amount: "300g" },
                        { time: "2:30 PM", amount: "300g" },
                        { time: "4:00 PM", amount: "300g" }
                    ],
                    notes: "Fish adapting well. Continue high frequency feeding."
                },
                {
                    week: 3,
                    fishCount: 4920,
                    avgWeight: 8,
                    pelletSize: "2mm",
                    dailyFeed: 1.8,
                    feedingTimes: 4,
                    schedule: [
                        { time: "9:30 AM", amount: "450g" },
                        { time: "12:00 PM", amount: "450g" },
                        { time: "2:30 PM", amount: "450g" },
                        { time: "4:00 PM", amount: "450g" }
                    ],
                    notes: "Transition to 2mm pellets. Mortality should stabilize."
                },
                {
                    week: 4,
                    fishCount: 4900,
                    avgWeight: 12,
                    pelletSize: "2mm",
                    dailyFeed: 2.6,
                    feedingTimes: 4,
                    schedule: [
                        { time: "9:30 AM", amount: "650g" },
                        { time: "12:00 PM", amount: "650g" },
                        { time: "2:30 PM", amount: "650g" },
                        { time: "4:00 PM", amount: "650g" }
                    ],
                    notes: "Good growth rate. Prepare for 3mm transition next week."
                }
            ],
            2: [ // Month 2
                {
                    week: 5,
                    fishCount: 4850,
                    avgWeight: 18,
                    pelletSize: "2-3mm",
                    dailyFeed: 3.5,
                    feedingTimes: 4,
                    schedule: [
                        { time: "9:30 AM", amount: "875g" },
                        { time: "12:00 PM", amount: "875g" },
                        { time: "2:30 PM", amount: "875g" },
                        { time: "4:00 PM", amount: "875g" }
                    ],
                    notes: "Begin transition to 3mm pellets (mix 50/50 with 2mm)"
                },
                {
                    week: 6,
                    fishCount: 4800,
                    avgWeight: 25,
                    pelletSize: "3mm",
                    dailyFeed: 4.8,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "1.6kg" },
                        { time: "1:00 PM", amount: "1.6kg" },
                        { time: "3:30 PM", amount: "1.6kg" }
                    ],
                    notes: "Fully on 3mm pellets. Reduce feeding frequency."
                },
                {
                    week: 7,
                    fishCount: 4750,
                    avgWeight: 35,
                    pelletSize: "3mm",
                    dailyFeed: 6.6,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "2.2kg" },
                        { time: "1:00 PM", amount: "2.2kg" },
                        { time: "3:30 PM", amount: "2.2kg" }
                    ],
                    notes: "Good growth acceleration. Monitor water quality."
                },
                {
                    week: 8,
                    fishCount: 4700,
                    avgWeight: 45,
                    pelletSize: "3mm",
                    dailyFeed: 8.5,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "2.8kg" },
                        { time: "1:00 PM", amount: "2.8kg" },
                        { time: "3:30 PM", amount: "2.9kg" }
                    ],
                    notes: "Prepare for 4mm transition. Protein can reduce to 35-38%."
                }
            ],
            3: [ // Month 3
                {
                    week: 9,
                    fishCount: 4650,
                    avgWeight: 60,
                    pelletSize: "3-4mm",
                    dailyFeed: 11.2,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "3.7kg" },
                        { time: "1:00 PM", amount: "3.7kg" },
                        { time: "3:30 PM", amount: "3.8kg" }
                    ],
                    notes: "Begin 4mm transition (mix 50/50 with 3mm)"
                },
                {
                    week: 10,
                    fishCount: 4600,
                    avgWeight: 80,
                    pelletSize: "4mm",
                    dailyFeed: 14.7,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "4.9kg" },
                        { time: "1:00 PM", amount: "4.9kg" },
                        { time: "3:30 PM", amount: "4.9kg" }
                    ],
                    notes: "Fully on 4mm pellets. Rapid growth phase begins."
                },
                {
                    week: 11,
                    fishCount: 4550,
                    avgWeight: 105,
                    pelletSize: "4mm",
                    dailyFeed: 19.1,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "6.4kg" },
                        { time: "1:00 PM", amount: "6.3kg" },
                        { time: "3:30 PM", amount: "6.4kg" }
                    ],
                    notes: "Peak growth rate period. Monitor feeding response."
                },
                {
                    week: 12,
                    fishCount: 4500,
                    avgWeight: 135,
                    pelletSize: "4mm",
                    dailyFeed: 24.3,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "8.1kg" },
                        { time: "1:00 PM", amount: "8.1kg" },
                        { time: "3:30 PM", amount: "8.1kg" }
                    ],
                    notes: "Excellent growth. Water quality critical at this biomass."
                }
            ],
            4: [ // Month 4
                {
                    week: 13,
                    fishCount: 4450,
                    avgWeight: 170,
                    pelletSize: "4-6mm",
                    dailyFeed: 30.3,
                    feedingTimes: 3,
                    schedule: [
                        { time: "10:00 AM", amount: "10.1kg" },
                        { time: "1:00 PM", amount: "10.1kg" },
                        { time: "3:30 PM", amount: "10.1kg" }
                    ],
                    notes: "Begin 6mm transition for larger fish"
                },
                {
                    week: 14,
                    fishCount: 4400,
                    avgWeight: 210,
                    pelletSize: "6mm",
                    dailyFeed: 37.0,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "18.5kg" },
                        { time: "2:30 PM", amount: "18.5kg" }
                    ],
                    notes: "Fully on 6mm pellets. Reduce to 2 feedings daily."
                },
                {
                    week: 15,
                    fishCount: 4350,
                    avgWeight: 250,
                    pelletSize: "6mm",
                    dailyFeed: 43.5,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "21.8kg" },
                        { time: "2:30 PM", amount: "21.7kg" }
                    ],
                    notes: "Monitor individual fish sizes for grading needs."
                },
                {
                    week: 16,
                    fishCount: 4300,
                    avgWeight: 295,
                    pelletSize: "6mm",
                    dailyFeed: 50.8,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "25.4kg" },
                        { time: "2:30 PM", amount: "25.4kg" }
                    ],
                    notes: "Strong growth continues. Protein 30-32%."
                }
            ],
            5: [ // Month 5
                {
                    week: 17,
                    fishCount: 4250,
                    avgWeight: 345,
                    pelletSize: "6mm",
                    dailyFeed: 58.7,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "29.4kg" },
                        { time: "2:30 PM", amount: "29.3kg" }
                    ],
                    notes: "Approaching market size. Monitor growth efficiency."
                },
                {
                    week: 18,
                    fishCount: 4200,
                    avgWeight: 400,
                    pelletSize: "6mm",
                    dailyFeed: 67.2,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "33.6kg" },
                        { time: "2:30 PM", amount: "33.6kg" }
                    ],
                    notes: "Good market size range. Consider selective harvesting."
                },
                {
                    week: 19,
                    fishCount: 4150,
                    avgWeight: 460,
                    pelletSize: "6mm",
                    dailyFeed: 76.4,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "38.2kg" },
                        { time: "2:30 PM", amount: "38.2kg" }
                    ],
                    notes: "Excellent size. Monitor market prices for harvest timing."
                },
                {
                    week: 20,
                    fishCount: 4100,
                    avgWeight: 525,
                    pelletSize: "6mm",
                    dailyFeed: 86.1,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "43.1kg" },
                        { time: "2:30 PM", amount: "43.0kg" }
                    ],
                    notes: "Premium market size achieved."
                }
            ],
            6: [ // Month 6
                {
                    week: 21,
                    fishCount: 4080,
                    avgWeight: 590,
                    pelletSize: "6mm",
                    dailyFeed: 96.3,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "48.2kg" },
                        { time: "2:30 PM", amount: "48.1kg" }
                    ],
                    notes: "Large market size. Plan harvest operations."
                },
                {
                    week: 22,
                    fishCount: 4060,
                    avgWeight: 655,
                    pelletSize: "6mm",
                    dailyFeed: 106.4,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "53.2kg" },
                        { time: "2:30 PM", amount: "53.2kg" }
                    ],
                    notes: "Excellent size for premium markets."
                },
                {
                    week: 23,
                    fishCount: 4040,
                    avgWeight: 720,
                    pelletSize: "6mm",
                    dailyFeed: 116.4,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "58.2kg" },
                        { time: "2:30 PM", amount: "58.2kg" }
                    ],
                    notes: "Near target weight. Consider partial harvest."
                },
                {
                    week: 24,
                    fishCount: 4020,
                    avgWeight: 790,
                    pelletSize: "6mm",
                    dailyFeed: 127.2,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "63.6kg" },
                        { time: "2:30 PM", amount: "63.6kg" }
                    ],
                    notes: "Approaching 1kg target. Prepare for harvest."
                }
            ],
            7: [ // Month 7
                {
                    week: 25,
                    fishCount: 4010,
                    avgWeight: 860,
                    pelletSize: "6mm",
                    dailyFeed: 138.1,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "69.1kg" },
                        { time: "2:30 PM", amount: "69.0kg" }
                    ],
                    notes: "Target size reached. Begin harvest operations."
                },
                {
                    week: 26,
                    fishCount: 4005,
                    avgWeight: 920,
                    pelletSize: "6mm",
                    dailyFeed: 147.4,
                    feedingTimes: 2,
                    schedule: [
                        { time: "10:30 AM", amount: "73.7kg" },
                        { time: "2:30 PM", amount: "73.7kg" }
                    ],
                    notes: "Excellent harvest size. Continue selective harvest."
                },
                {
                    week: 27,
                    fishCount: 4000,
                    avgWeight: 980,
                    pelletSize: "6mm",
                    dailyFeed: 117.6,
                    feedingTimes: 1,
                    schedule: [
                        { time: "11:00 AM", amount: "117.6kg" }
                    ],
                    notes: "Final week. Reduce feeding for harvest preparation."
                },
                {
                    week: 28,
                    fishCount: 4000,
                    avgWeight: 1000,
                    pelletSize: "6mm",
                    dailyFeed: 80.0,
                    feedingTimes: 1,
                    schedule: [
                        { time: "11:00 AM", amount: "80.0kg" }
                    ],
                    notes: "TARGET ACHIEVED! 1kg average. Stop feeding 24-48hrs before harvest."
                }
            ]
        };
        
        let currentMonth = 1;
        let selectedWeek = null;
        
        function calculateTotalFeed() {
            let total = 0;
            Object.values(feedingData).forEach(month => {
                month.forEach(week => {
                    total += week.dailyFeed * 7; // 7 days per week
                });
            });
            return Math.round(total);
        }
        
        function renderWeeks(month) {
            const weekGrid = document.getElementById('weekGrid');
            const weeks = feedingData[month];
            
            weekGrid.innerHTML = weeks.map(week => `
                <div class="week-card" data-week="${week.week}" onclick="selectWeek(${week.week})">
                    <div class="week-header">
                        <span class="week-title">Week ${week.week}</span>
                        <span class="fish-size">${week.avgWeight}g avg</span>
                    </div>
                    <div class="feeding-details">
                        <div class="detail-row">
                            <span class="detail-label">Fish Count:</span>
                            <span class="detail-value">${week.fishCount.toLocaleString()}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Daily Feed:</span>
                            <span class="detail-value">${week.dailyFeed}kg</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Pellet Size:</span>
                            <span class="pellet-size">${week.pelletSize}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Feedings/Day:</span>
                            <span class="detail-value">${week.feedingTimes}</span>
                        </div>
                    </div>
                    ${week.notes ? `<div class="notes"><h4>Notes:</h4><p>${week.notes}</p></div>` : ''}
                </div>
            `).join('');
        }
        
        function selectWeek(weekNum) {
            selectedWeek = weekNum;
            
            // Remove previous selection
            document.querySelectorAll('.week-card').forEach(card => {
                card.classList.remove('selected');
            });
            
            // Add selection to clicked week
            document.querySelector(`[data-week="${weekNum}"]`).classList.add('selected');
            
            // Find week data
            let weekData = null;
            Object.values(feedingData).forEach(month => {
                const found = month.find(w => w.week === weekNum);
                if (found) weekData = found;
            });
            
            if (weekData) {
                renderDailyBreakdown(weekData);
            }
        }
        
        function renderDailyBreakdown(weekData) {
            const dailyBreakdown = document.getElementById('dailyBreakdown');
            const dailyHeader = document.getElementById('selectedWeekTitle');
            const dailyGrid = document.getElementById('dailyGrid');
            
            dailyHeader.textContent = `Week ${weekData.week} - Daily Feeding Schedule`;
            
            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
            
            dailyGrid.innerHTML = days.map(day => `
                <div class="daily-card">
                    <div class="day-title">${day}</div>
                    <div class="detail-row">
                        <span class="detail-label">Daily Total:</span>
                        <span class="detail-value">${weekData.dailyFeed}kg</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Per Feeding:</span>
                        <span class="detail-value">${(weekData.dailyFeed / weekData.feedingTimes).toFixed(1)}kg</span>
                    </div>
                    <ul class="feeding-schedule">
                        ${weekData.schedule.map(feeding => `
                            <li>
                                <span class="time">${feeding.time}</span>
                                <span class="amount">${feeding.amount}</span>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `).join('');
            
            dailyBreakdown.classList.add('show');
        }
        
        function switchMonth(month) {
            currentMonth = month;
            
            // Update active button
            document.querySelectorAll('.month-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.querySelector(`[data-month="${month}"]`).classList.add('active');
            
            // Render weeks for selected month
            renderWeeks(month);
            
            // Hide daily breakdown
            document.getElementById('dailyBreakdown').classList.remove('show');
            selectedWeek = null;
        }
        
        // Event listeners
        document.querySelectorAll('.month-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const month = parseInt(e.target.dataset.month);
                switchMonth(month);
            });
        });
        
        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('totalFeed').textContent = calculateTotalFeed() + 'kg';
            renderWeeks(1);
        });
    </script>
</body>
</html>
